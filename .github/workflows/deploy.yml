name: Deploy to Heroku

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: GH_TOKEN

      - name: Verify Maven Settings
        run: |
          echo "Checking ~/.m2/settings.xml content:"
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>\${env.GITHUB_ACTOR}</username>
                <password>\${env.GH_TOKEN}</password>
              </server>
            </servers>
          </settings>
          EOF
          echo "Settings.xml content:"
          cat ~/.m2/settings.xml
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_ACTOR: ${{ secrets.GH_USER }}

      - name: Check Version and Auto-increment if needed
        run: |
          # Function to increment version
          increment_version() {
            local version=$1
            if [[ $version =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)(-SNAPSHOT)?$ ]]; then
              local major=${BASH_REMATCH[1]}
              local minor=${BASH_REMATCH[2]}
              local patch=${BASH_REMATCH[3]}
              local snapshot=${BASH_REMATCH[4]:-}
              # Increment patch version
              patch=$((patch + 1))
              echo "${major}.${minor}.${patch}${snapshot}"
            else
              echo "Invalid version format"
              exit 1
            fi
          }

          # Get the current version from pom.xml
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          VERSION=$CURRENT_VERSION
          echo "Starting with version: $VERSION"
          
          # Keep trying until we find an available version
          while mvn dependency:get -Dartifact=com.example:demo-webapp:${VERSION}:war \
            -DremoteRepositories=github::default::https://maven.pkg.github.com/${GITHUB_REPOSITORY} \
            -Dtransitive=false -quiet 2>/dev/null; do
            echo "Version ${VERSION} exists, incrementing..."
            VERSION=$(increment_version "$VERSION")
          done
          
          if [ "$VERSION" != "$CURRENT_VERSION" ]; then
            echo "Found available version: $VERSION"
            echo "Updating main pom.xml..."
            mvn versions:set -DnewVersion=$VERSION
            
            echo "Updating consumer-app/pom.xml..."
            cd consumer-app
            # Update both the project version and the demo-webapp.version property
            mvn versions:set -DnewVersion=$VERSION
            mvn versions:set-property -Dproperty=demo-webapp.version -DnewVersion=$VERSION
            cd ..
            
            # Stage the changes
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add pom.xml consumer-app/pom.xml
            git commit -m "chore(release): bump version to $VERSION [skip ci]"
            git push
          else
            echo "Using original version: $VERSION"
          fi
          
          # Export the version for use in later steps
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build and publish main webapp
        run: |
          echo "Current version from pom.xml:"
          mvn help:evaluate -Dexpression=project.version -q -DforceStdout
          
          echo "Publishing to GitHub Packages..."
          mvn -B clean deploy -DskipTests \
            -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ github.repository }} \
            --file pom.xml
          
          echo "Verifying published artifact..."
          mvn dependency:get \
            -DremoteRepositories=github::default::https://maven.pkg.github.com/${{ github.repository }} \
            -DgroupId=com.example \
            -DartifactId=demo-webapp \
            -Dversion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) \
            -Dpackaging=war \
            -Dtransitive=false
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_ACTOR: ${{ secrets.GH_USER }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          MAVEN_USERNAME: ${{ secrets.GH_USER }}
          MAVEN_PASSWORD: ${{ secrets.GH_TOKEN }}

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          healthcheck: "https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com/hello"
          rollbackonhealthcheckfailed: true
          justlogin: false
          appdir: "."
          procfile: "web: java $JAVA_OPTS -jar target/dependency/jetty-runner.jar --port $PORT target/demo-webapp.war"

      - name: Verify Deployment
        run: |
          # Give the app a moment to start
          sleep 10
          # Try the health endpoint first
          if curl -f "https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com/hello"; then
            echo "Deployment verified successfully"
            exit 0
          else
            echo "Health check failed"
            exit 1
          fi
